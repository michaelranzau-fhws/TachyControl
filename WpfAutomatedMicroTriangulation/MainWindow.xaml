<Window x:Name="winMain" x:Class="AutomatedMicroTriangulation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutomatedMicroTriangulation"
        xmlns:link="clr-namespace:TSControl;assembly=TachyControl"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:io="clr-namespace:System.IO.Ports;assembly=System"
        mc:Ignorable="d"
        Title="Automated Micro Triangulation" Height="684.6" Width="1048" ResizeMode="NoResize" Icon="TitleIcon.ico" WindowStartupLocation="CenterScreen" Closing="winMain_Closing">
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5C5C5</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FFCCCCCC</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FFAAAAAA</Color>
        <Color x:Key="ControlPressedColor">#FF888888</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FFAAAAAA</Color>
        <Color x:Key="BorderDarkColor">#FF888888</Color>

        <Color x:Key="PressedBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="PressedBorderDarkColor">#FF888888</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- FocusVisual -->
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#60000000"
                     StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button normal -->
        <Style TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight"
          Value="23" />
            <Setter Property="MinWidth"
          Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button TreeView Concept-->
        <Style x:Key="Button_TreeViewItem" TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Height"
          Value="20" />
            <Setter Property="Width"
          Value="25" />
            <Setter Property="FontSize"
          Value="10" />
            <Setter Property="FontWeight"
          Value="Normal" />
            <Setter Property="Margin"
          Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="#FFFF7B7B"
                            Offset="0" />
                                    <GradientStop Color="#FFFFC2C2"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFFF7B7B" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFFF5555" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button TreeView Concept green -->
        <Style x:Key="Button_TreeViewItem_green" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="#FF7ED158"
                            Offset="0" />
                                    <GradientStop Color="#FFC2FFC2"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF7BFF7B" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FF55FF55" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                           <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button BTN_Add -->
        <Style x:Key="Button_TreeViewItem_orange" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFC963"
                            Offset="0" />
                                    <GradientStop Color="#FFFFF0D4"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFFFC963" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFFFBB39" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Button_TreeViewItem_gray" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="#FFCDCDCD"
                            Offset="0" />
                                    <GradientStop Color="#FFDDDDDD"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFBDBDBD" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFBBBBBB" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">
                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BTN_Add" TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Height"
          Value="17" />
            <Setter Property="Width"
          Value="Auto" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2,3,2,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                x:Name="Border"
                CornerRadius="2"
                BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                            Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBlock Margin="0,0,0,0" Padding="2">
                                <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="RedBrush" Color="Red"/>
        <SolidColorBrush x:Key="WhiteBrush" Color="White"/>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#FF8C8E94"/>
        <SolidColorBrush x:Key="GreenBrush" Color="Green"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFF3F3F3"/>
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FF8C8E94"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Black"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
                                Name="Border"
                                Background="{StaticResource DisabledBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}" 
                                BorderThickness="0.5,0.5,0.5,0" 
                                CornerRadius="0,3,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource WhiteBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF1BBBFA"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF595959"/>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF989898"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="#007ED158"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="15" Margin="{TemplateBinding Margin}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Name="Bd" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TVI_Add" TargetType="{x:Type TreeViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,2,1"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Border Padding="{TemplateBinding Padding}" Background="#FFDDDDDD" CornerRadius="15" Margin="{TemplateBinding Margin}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Label Grid.Column="1" FontSize="20" FontWeight="Bold" Margin="0,-6,0,-10" Padding="0">+</Label>
                                <Border x:Name="Bd" Grid.Column="1" Margin="20,-2,0,0">
                                    <ContentPresenter Visibility="Collapsed" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Margin" Value="20,0,0,0"/>
                                <Setter Property="Width" Value="245"/>
                                <Setter Property="Visibility" TargetName="PART_Header" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#FFDDDDDD"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <ObjectDataProvider x:Key="dataFromStations"
                    ObjectType ="{x:Type local:ProvidedFunctions}"
                    MethodName="getStations" />
        <ObjectDataProvider x:Key="numberOftargetsNotNull"
                    ObjectType ="{x:Type local:ProvidedFunctions}"
                    MethodName="getNumberOftargetsNotNull" />
        <ObjectDataProvider x:Key="dataFromCOMs"
                    ObjectType="{x:Type link:TSControl}"
                    MethodName="getCOMPorts" />
        <ObjectDataProvider x:Key="dataFromParityEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="io:Parity"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataFromStopBitsEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="io:StopBits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="SetTSSetCOMTemplate" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border VerticalAlignment="Top" Width="200" Height="320" Margin="5" Background="#FFF7F7F7" CornerRadius="4" BorderThickness="1" BorderBrush="Black">
                            <DockPanel>
                                <ComboBox x:Name="SetTSSetCOM" Margin="5,5,5,5" DockPanel.Dock="Top" 
                                                  SelectedValue="{Binding COMID, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                  IsReadOnly="False" 
                                                  SelectedValuePath="ID" ItemsSource="{Binding Source={StaticResource dataFromCOMs}}" />
                                <ComboBox x:Name="SetTSSetTSType" Margin="5,0,5,5" DockPanel.Dock="Top" 
                                          SelectedValue="{Binding TSType, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" IsReadOnly="False" 
                                          ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:TotalStationType}}}" />
                                <ComboBox x:Name="SetTSSetStation" Margin="5,0,5,5" DockPanel.Dock="Top"
                                          SelectedValue="{Binding StationID, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                          IsReadOnly="False" DisplayMemberPath="Name" 
                                          SelectedValuePath="ID" ItemsSource="{Binding Source={StaticResource dataFromStations}, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Margin="5,0,5,5" TextWrapping="Wrap" DockPanel.Dock="Top">
                                            Total station: <LineBreak />
                                            <TextBlock Text="{Binding DeviceType}" /><LineBreak />
                                            Camera: <TextBlock Text="{Binding Camera}" /><LineBreak />
                                            Serial number: <TextBlock Text="{Binding SerialNumber}" />
                                </TextBlock>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Width="80">BaudRate:</Label>
                                    <ComboBox Grid.Column="1" Margin="5" SelectedValue="{Binding _BaudRate, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                            IsReadOnly="False" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:BaudRate}}}" />
                                </Grid>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Width="80">DataBits:</Label>
                                    <ComboBox Grid.Column="1" Margin="5" SelectedValue="{Binding _DataBits, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            IsReadOnly="False" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:DataBits}}}" />
                                </Grid>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Width="80">Parity:</Label>
                                    <ComboBox Grid.Column="1" Margin="5" SelectedValue="{Binding _Parity, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                            IsReadOnly="False" ItemsSource="{Binding Source={StaticResource dataFromParityEnum}}" />
                                </Grid>
                                <Grid DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Width="80">StopBits:</Label>
                                    <ComboBox Grid.Column="1" Margin="5" SelectedValue="{Binding _StopBits, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                            IsReadOnly="False" ItemsSource="{Binding Source={StaticResource dataFromStopBitsEnum}}" />
                                </Grid>
                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
                                    <Button Margin="5" Width="50" Height="20" Content="Test" />
                                    <Button Margin="5" Width="40" Height="20" Content="Delete" Style="{StaticResource Button_TreeViewItem}" />
                                    <Button Margin="5" Width="50" Height="20" Content="Default" Style="{StaticResource Button_TreeViewItem_green}" FontSize="10" />
                                </StackPanel>
                                <Grid></Grid>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <DockPanel LastChildFill="True" Margin="0,0,-0.4,-0.2" Grid.RowSpan="2">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                <Label Content="Automated Micro Triangulation - " FontSize="16" FontWeight="Bold" />
                <Label x:Name="lblPHead"  Content="" FontSize="16" FontWeight="Bold" />
            </StackPanel>
            <Label DockPanel.Dock="Bottom" Content="2016, FHWS" FontSize="12" FontWeight="Bold" Height="25" />
            <TabControl x:Name="tabControl_Main" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White">
                <TabItem Header="Project management">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblPMNumberStations" Content="Number of stations:" Margin="10,5,0,0" />
                            <Label x:Name="lblPMNumberStations2" Content="" Margin="0,5,10,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblPMNumberTargets" Content="Number of targets:" Margin="10,5,0,0" />
                            <Label x:Name="lblPMNumberTargets2" Content="" Margin="0,5,10,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblPMNumberObs" Content="Total number of observations:" Margin="10,5,0,0" />
                            <Label x:Name="lblPMNumberObs2" Content="" Margin="0,5,10,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label x:Name="lblPMLastObs" Content="Date of last observation:" Margin="10,5,0,0" />
                            <Label x:Name="lblPMLastObs2" Content="" Margin="0,5,10,0"/>
                        </StackPanel>
                        <Separator/>
                        <Grid HorizontalAlignment="Stretch" Margin="10,10,10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnPMOpen" Grid.Column="0" Content="Open" Margin="0,0,5,0" Click="btnPMOpen_Click" />
                            <Button x:Name="btnPMNew" Grid.Column="1" Content="New" Margin="5.4,0,0,0" Height="23" VerticalAlignment="Top" Click="btnPMNew_Click" />
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="10,5,10,5">
                            <Label Width="100" Content="Name: "/>
                            <TextBox x:Name="txtPMName" Width="200" LostFocus="txtPMName_LostFocus"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,5,10,5">
                            <Label Width="100" Content="Description: "/>
                            <TextBox x:Name="txtPMDescription" Width="400" Height="100" AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" LostFocus="txtPMDescription_LostFocus"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,5,10,5">
                            <Label Width="100" Content="Creator: "/>
                            <TextBox x:Name="txtPMCreator" Width="200" LostFocus="txtPMCreator_LostFocus"></TextBox>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Targets">
                    <TabControl x:Name="tabControl_targets" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TabItem Header="Targets">
                            <DockPanel LastChildFill="True">
                                <Grid HorizontalAlignment="Stretch" Margin="10,10,10,5" DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnTTLoadT" Grid.Column="0" Content="Load Targets" Margin="0,0,5,0" Click="btnTTLoadT_Click" />
                                    <Button x:Name="btnNewTarget" Grid.Column="1" Content="New Target" Margin="5.2,0,0.4,0.4" Click="btnNewTarget_Click" Height="23" VerticalAlignment="Bottom" />
                                </Grid>
                                <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Separator />
                                    <Label Content="Number of targets: " Margin="10,5,10,0"/>
                                </StackPanel>
                                <DataGrid x:Name="dgrTargets" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,10" Background="White" 
                                          AutoGenerateColumns="False" IsReadOnly="False" IsSynchronizedWithCurrentItem="True"
                                           CanUserAddRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="1*" Header="ID" SortMemberPath="ID"  IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Name" SortMemberPath="Name" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="4*" Header="Method" SortMemberPath="Method" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:TargetMethod}}}" 
                                                               SelectedValue="{Binding Method, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" SortMemberPath="PointLocal.X" IsReadOnly="False">
                                            <DataGridTemplateColumn.Header>
                                                <Span>
                                                    <Span>X</Span>
                                                    <Span FontSize="9">object</Span>
                                                </Span>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding PointLocal.X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" SortMemberPath="PointLocal.Y" IsReadOnly="False">
                                            <DataGridTemplateColumn.Header>
                                                <Span>
                                                    <Span>Y</Span>
                                                    <Span FontSize="9">object</Span>
                                                </Span>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding PointLocal.Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" SortMemberPath="PointLocal.Z" IsReadOnly="False">
                                            <DataGridTemplateColumn.Header>
                                                <Span>
                                                    <Span>Z</Span>
                                                    <Span FontSize="9">object</Span>
                                                </Span>
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding PointLocal.Z, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="X" SortMemberPath="Point.X" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Y" SortMemberPath="Point.Y" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Z" SortMemberPath="Point.Z" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.Z, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="5*" Header="Description" SortMemberPath="Description" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2.5*" Header="">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Background="White">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                            <Button Height="18" Content="measure" Style="{StaticResource Button_TreeViewItem_green}" Width="50" FontSize="10" />
                                                            <Button x:Name="btnTargetDel" Height="18" Content="del" Style="{StaticResource Button_TreeViewItem}"
                                                                    Click="btnTargetDel_Click" />
                                                        </StackPanel>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Control points">
                            <DockPanel LastChildFill="True">
                                <Grid HorizontalAlignment="Stretch" Margin="10,10,10,5" DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Content="Load control points" Margin="0,0,5,0" />
                                    <Button x:Name="btnNewCP" Grid.Column="1" Content="New control point" Margin="5,0,0,0" Click="btnNewCP_Click" />
                                </Grid>
                                <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Separator />
                                    <Label Content="Number of targets: " Margin="10,5,10,0"/>
                                </StackPanel>
                                <DataGrid x:Name="dgrControlPoints" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,10" Background="White" 
                                          AutoGenerateColumns="False" IsReadOnly="False" IsSynchronizedWithCurrentItem="True"
                                           CanUserAddRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="1*" Header="ID" SortMemberPath="ID"  IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Name" SortMemberPath="Name" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="4*" Header="Method" SortMemberPath="Method" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:TargetMethod}}}" 
                                                               SelectedValue="{Binding Method, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="X" SortMemberPath="Point.X" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Y" SortMemberPath="Point.Y" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2*" Header="Z" SortMemberPath="Point.Z" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Point.Z, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="5*" Header="Description" SortMemberPath="Description" IsReadOnly="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="2.5*" Header="">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Background="White">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                            <Button Height="18" Content="measure" Style="{StaticResource Button_TreeViewItem_green}" Width="50" FontSize="10" />
                                                            <Button x:Name="btnTargetsCPDel" Height="18" Content="del" Style="{StaticResource Button_TreeViewItem}" Click="btnTargetsCPDel_Click" />
                                                        </StackPanel>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="Stations">
                    <DockPanel LastChildFill="True">
                        <Grid HorizontalAlignment="Stretch" Margin="10,10,10,5" DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnStationsLS" Grid.Column="0" Content="Load Stations" Margin="0,0,5,0" Click="btnStationsLS_Click" />
                            <Button x:Name="btnNewStation" Grid.Column="1" Content="New Station" Margin="5,0,0,0" Click="btnNewStation_Click" />
                        </Grid>
                        <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Separator />
                            <Label Content="Number of targets: " Margin="10,5,10,0"/>
                        </StackPanel>
                        <DataGrid x:Name="dgrStations" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,10" Background="White" 
                                  AutoGenerateColumns="False" IsReadOnly="False" IsSynchronizedWithCurrentItem="True"
                                  CanUserAddRows="False">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="1*" Header="ID" SortMemberPath="ID"  IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="2*" Header="Name" SortMemberPath="Name" IsReadOnly="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="2*" Header="X" SortMemberPath="Point.X" IsReadOnly="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Point.X, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="2*" Header="Y" SortMemberPath="Point.Y" IsReadOnly="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Point.Y, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="2*" Header="Z" SortMemberPath="Point.Z" IsReadOnly="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Point.Z, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="5*" Header="Description" SortMemberPath="Description" IsReadOnly="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="2.5*" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Stretch" Background="White">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <Grid IsEnabled="{Binding Source={StaticResource numberOftargetsNotNull}, UpdateSourceTrigger=PropertyChanged}">
                                                        <Button x:Name="btnStationsMeasure" Height="18" Content="measure" 
                                                                Style="{StaticResource Button_TreeViewItem_green}"
                                                                Width="50" FontSize="10" Click="btnStationsMeasure_Click" 
                                                                IsEnabled="{Binding IsCOMSet, UpdateSourceTrigger=LostFocus}" />
                                                    </Grid>
                                                    <Button x:Name="btnStationsDel" Height="18" Content="del" Style="{StaticResource Button_TreeViewItem}" Click="btnStationsDel_Click" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Measuring concept">
                    <StackPanel x:Name="stpMConceptObservations">
                        <Button Style="{StaticResource Button_TreeViewItem}" DockPanel.Dock="Top" Width="50" Height="30" HorizontalAlignment="Right" Margin="5" Panel.ZIndex="1">
                            Clear all
                        </Button>
                        <TreeView x:Name="trvMConcept" BorderThickness="0" Height="525" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,-25,0,0">
                         </TreeView>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Measuring mode">
                    <TabControl x:Name="tabControl_measuringMode" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TabItem Header="Connect">
                            <WrapPanel x:Name="wrpMModeConnect" Orientation="Horizontal">
                            </WrapPanel>
                        </TabItem>
                        <TabItem Header="Observations">
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <Button x:Name="btnMModeObsStart" DockPanel.Dock="Left" Style="{StaticResource Button_TreeViewItem_green}" Width="80" Height="30" Click="btnMModeObsStart_Click">
                                        Start
                                    </Button>
                                    <Button x:Name="btnMModeObsStop" DockPanel.Dock="Left" FontSize="12" Style="{StaticResource Button_TreeViewItem}" Width="80" Height="30" Margin="5,0,0,0" IsEnabled="False" Click="btnMModeObsStop_Click">
                                        Stop / Pause
                                    </Button>
                                    <Button x:Name="btnMModeObsClearMeasurings" FontSize="12" DockPanel.Dock="Right" Height="30" Width="100" Style="{StaticResource Button_TreeViewItem}" Margin="5,0,0,0" Click="btnMModeObsClearMeasurings_Click">
                                        Clear measurings
                                    </Button>
                                    <Button x:Name="btnMModeObsClearConcept" FontSize="12"  DockPanel.Dock="Right" Height="30" Width="80" Style="{StaticResource Button_TreeViewItem}" Margin="5,0,0,0" Click="btnMModeObsClearConcept_Click">
                                        Clear concept
                                    </Button>
                                    <Button DockPanel.Dock="Right" Margin="5,0,0,0">Check Targets</Button>
                                    <Button x:Name="btnMModeObsFromMConcept" DockPanel.Dock="Right" Margin="5,0,0,0" Click="btnMModeObsFromMConcept_Click">Load from measurement concept</Button>
                                    <Grid></Grid>
                                </DockPanel>
                                <Separator DockPanel.Dock="Top"></Separator>
                                <TreeView x:Name="trvMMode" BorderThickness="0" Height="500" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0" DockPanel.Dock="Top">
                                </TreeView>
                                <Grid></Grid>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="Results">
                    <DockPanel>
                        <TabControl DockPanel.Dock="Top" x:Name="tabControl_results" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TabItem Header="Measuring data">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Button DockPanel.Dock="Right" Margin="5,0,0,0">Export</Button>
                                        <Grid></Grid>
                                    </DockPanel>
                                    <Separator DockPanel.Dock="Top"></Separator>
                                    <Grid></Grid>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="Calculations">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Margin="0,0,5,0">Calculate targets</Button>
                                            <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="True">Fix stations</CheckBox>
                                            <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="True">Fix control points</CheckBox>
                                        </StackPanel>
                                        <Button DockPanel.Dock="Right" Margin="0,0,0,0">Export</Button>
                                        <Grid></Grid>
                                    </DockPanel>
                                    <Separator DockPanel.Dock="Top"></Separator>
                                    <Grid></Grid>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="Differences">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <Button DockPanel.Dock="Right" Margin="5,0,0,0">Export</Button>
                                        <Grid></Grid>
                                    </DockPanel>
                                    <Separator DockPanel.Dock="Top"></Separator>
                                    <Grid></Grid>
                                </DockPanel>
                            </TabItem>
                            <TabItem Header="Protocol">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Top">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Margin="0,0,5,0" VerticalAlignment="Center" IsChecked="True">Full protocol</CheckBox>
                                        </StackPanel>
                                        <Button DockPanel.Dock="Right" Margin="5,0,0,0">Export</Button>
                                        <Grid></Grid>
                                    </DockPanel>
                                    <Separator DockPanel.Dock="Top"></Separator>
                                    <Grid></Grid>
                                </DockPanel>
                            </TabItem>
                        </TabControl>
                        <Button DockPanel.Dock="Bottom" Style="{StaticResource Button_TreeViewItem}" Width="80" Height="30" HorizontalAlignment="Right" Margin="5" Panel.ZIndex="1">
                            Clear all results
                        </Button>
                        <Grid></Grid>
                    </DockPanel>
                </TabItem>
                <TabItem x:Name="tabMainSettings" Header="Settings">
                    <TabControl x:Name="tabControl_settings" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TabItem x:Name="tabSetTSSet" Header="Total station settings">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <WrapPanel x:Name="wrpSetTSSetSP" Orientation="Horizontal">
                                </WrapPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Notification settings">
                            <DockPanel>
                                <StackPanel Orientation="Horizontal" Margin="5,5,0,0" DockPanel.Dock="Top">
                                    <Label Width="80">Send to:</Label>
                                    <ComboBox Width="180" Height="20" VerticalContentAlignment="Center">
                                        <ComboBoxItem IsSelected="True">michael.ranzau@fhws.de</ComboBoxItem>
                                    </ComboBox>
                                </StackPanel>
                                <CheckBox DockPanel.Dock="Top" Margin="10,5,0,0">Send notification on total stations behavior</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Power status</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Position is moving</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Orientiation is moving</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Fatal errors</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="10,5,0,0">Connection error</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="10,5,0,0">Attachments</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Last protocol</CheckBox>
                                <CheckBox DockPanel.Dock="Top" Margin="29,5,0,0">Last measurements</CheckBox>
                                <Grid DockPanel.Dock="Top"></Grid>
                            </DockPanel>
                        </TabItem>
                        <!--<TabItem Header="Protocol">
                        </TabItem>-->
                        <TabItem Header="Contacts">
                            <DockPanel LastChildFill="True">
                                <Grid HorizontalAlignment="Stretch" Margin="10,10,10,5" DockPanel.Dock="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="btnNewContact" Grid.Column="0" Content="New contact" Margin="0,0,5,0" />
                                </Grid>
                                <StackPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Separator />
                                    <Label Content="Number of contacts: " Margin="10,5,10,0"/>
                                </StackPanel>
                                <DataGrid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,10" Background="White">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="1*" Header="Name" SortMemberPath="Name">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Name}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="1*" Header="EMail" SortMemberPath="EMail">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding EMail}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="1*" Header="Phone" SortMemberPath="Phone">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Phone}" BorderThickness="0" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="0.2*" Header="" SortMemberPath="delete">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="del" Style="{StaticResource Button_TreeViewItem}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <!--<TabItem Header="Calibration">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">1. Select station to calibrate</Label>
                            <ComboBox x:Name="cmbCaliSelectStation" DisplayMemberPath="Name" Width="100" SelectionChanged="cmbCaliSelectStation_SelectionChanged"></ComboBox>
                        </StackPanel>
                        <Separator />
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">2.</Label>
                            <Button x:Name="btnCaliConnect" Width="100" Click="btnCaliConnect_Click" IsEnabled="False">Connect</Button>
                            <Label x:Name="lblCaliConnect">Not connected</Label>
                        </StackPanel>
                        <Separator />
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">3. Aim to target</Label>
                            <Button x:Name="CaliStep3"  IsEnabled="False" Click="btnCaliAimOK_Click">OK</Button>
                        </StackPanel>
                        <Separator />
                        <Grid Height="450">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="4*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="5">
                                <Label FontWeight="Bold">4. Template</Label>
                                <Grid>
                                    <Image x:Name="imgCaliTemp" Margin="0,-3,0,0" 
                                         />
                                    <Rectangle x:Name="rctCaliTempImg" Stroke="White" StrokeThickness="2" Width="50" Height="50" />
                                </Grid>
                                 <Grid x:Name="CaliStep4" IsEnabled="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Grid.Column="0">Exp. time:</Label>
                                        <Label x:Name="lblCaliExpTime" Content="{Binding ElementName=sldCaliTempExp,Path=Value}" Margin="-8,0,0,0"></Label>
                                    </StackPanel>
                                    <Slider x:Name="sldCaliTempExp" Grid.Column="1" Maximum="0.5" Minimum="0.01" SmallChange="0.01"
                                            IsSnapToTickEnabled="True" TickFrequency="0.01" ValueChanged="sldCaliTempExp_ValueChanged" 
                                            Value="0.1" IsEnabled="{Binding ElementName=cmbManualAperture, Path=IsChecked}"></Slider>
                                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                                        <Label>ISO:</Label>
                                        <ComboBox x:Name="cmbCaliISO" Margin="5,0,0,0" Width="120"
                                                   SelectedValue="{Binding ISO}" IsEnabled="{Binding ElementName=cmbManualAperture, Path=IsChecked}" SelectionChanged="cmbCaliISO_SelectionChanged" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
                                        <CheckBox x:Name="cmbManualAperture" Content="Manual aperture" Margin="5,0,0,0" Checked="cmbManualAperture_Checked" Unchecked="cmbManualAperture_Unchecked" />
                                    </StackPanel>
                                </Grid>
                                <Separator />
                                <Label FontWeight="Bold">5. Calibration settings</Label>
                                <StackPanel x:Name="CaliStep5" IsEnabled="False">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Grid.Column="0">Field size [gon]:</Label>
                                            <Label x:Name="lblCaliFieldSize" Content="{Binding ElementName=sldCaliFieldSize,Path=Value}" Margin="-8,0,0,0"></Label>
                                        </StackPanel>
                                        <Slider x:Name="sldCaliFieldSize" Grid.Column="1" Maximum="0.2" Minimum="0.05" SmallChange="0.01" IsSnapToTickEnabled="True" TickFrequency="0.01" ValueChanged="sldCaliFieldSize_ValueChanged" Value="0.15"></Slider>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Grid.Column="0">Points per side:</Label>
                                            <Label x:Name="lblCaliGridPoints" Content="{Binding ElementName=sldCaliGridPoints,Path=Value}" Margin="-8,0,0,0"></Label>
                                        </StackPanel>
                                        <Slider x:Name="sldCaliGridPoints" Grid.Column="1" Maximum="6" Minimum="3" SmallChange="1" IsSnapToTickEnabled="True" ValueChanged="sldCaliGridPoints_ValueChanged" Value="4"/>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                            <GridSplitter Grid.Column="1" Width="1" HorizontalAlignment="Stretch" Background="#FFA0A0A0"/>
                            <StackPanel Grid.Column="2" Margin="5">
                                <Label FontWeight="Bold">6. Calibration</Label>
                                <Button Margin="5" x:Name="CaliStep6" IsEnabled="False" Click="btnCaliCali_Click">Calibrate</Button>
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="370">
                                    <TextBlock x:Name="txtCaliProtocol" 
                                           Text="{Binding Path=(link:Protocol.FullNewProtocol), Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}" FontFamily="Courier New" />
                                </ScrollViewer>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Features">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">1. Select station for shooting</Label>
                            <ComboBox x:Name="cmbFeatureSelectStation" DisplayMemberPath="Name" Width="100" SelectionChanged="cmbFeatureSelectStation_SelectionChanged"></ComboBox>
                        </StackPanel>
                        <Separator />
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">2.</Label>
                            <Button x:Name="btnFeatureConnect" Width="100" Click="btnFeatureConnect_Click" IsEnabled="False">Connect</Button>
                            <Label x:Name="lblFeatureConnect">Not connected</Label>
                        </StackPanel>
                        <Separator />
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Label FontWeight="Bold">3. Aim to target</Label>
                            <Button x:Name="FeatureStep3"  IsEnabled="False" Click="btnFeatureAimOK_Click">OK</Button>
                        </StackPanel>
                        <Separator />
                        <Grid Height="450">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="4*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="5">
                                <Label FontWeight="Bold">4. Settings</Label>
                                <Image x:Name="imgFeatureTemp" Margin="5" />
                                <Grid x:Name="FeatureStep4" IsEnabled="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Grid.Column="0">Exp. time:</Label>
                                        <Label x:Name="lblFeatureExpTime" Content="{Binding ElementName=sldFeatureTempExp,Path=Value}" Margin="-8,0,0,0"></Label>
                                    </StackPanel>
                                    <Slider x:Name="sldFeatureTempExp" Grid.Column="1" Maximum="0.5" Minimum="0.01" SmallChange="0.01"
                                            IsSnapToTickEnabled="True" TickFrequency="0.01" ValueChanged="sldFeatureTempExp_ValueChanged" 
                                            Value="0.1" IsEnabled="{Binding ElementName=cmbFeatureManualAperture, Path=IsChecked}"></Slider>
                                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                                        <Label>ISO:</Label>
                                        <ComboBox x:Name="cmbFeatureISO" Margin="5,0,0,0" Width="120"
                                                   SelectedValue="{Binding ISO}" IsEnabled="{Binding ElementName=cmbFeatureManualAperture, Path=IsChecked}" 
                                                  SelectionChanged="cmbFeatureISO_SelectionChanged" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
                                        <CheckBox x:Name="cmbFeatureManualAperture" Content="Manual aperture" Margin="5,0,0,0" Checked="cmbFeatureManualAperture_Checked" 
                                                  Unchecked="cmbFeatureManualAperture_Unchecked" />
                                    </StackPanel>
                                </Grid>
                                <Separator />
                                <Label FontWeight="Bold">5. Method</Label>
                                <StackPanel x:Name="FeatureStep5" IsEnabled="False">
                                    <ComboBox x:Name="cmbFeatureMethod" ItemsSource="{Binding Source={local:EnumBindingSource {x:Type link:TargetMethod}}}" 
                                              SelectedValue="{Binding Method, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                              Width="120" HorizontalAlignment="Left" Margin="5,0,0,0" 
                                              />
                                </StackPanel>
                            </StackPanel>
                            <GridSplitter Grid.Column="1" Width="1" HorizontalAlignment="Stretch" Background="#FFA0A0A0"/>
                            <StackPanel Grid.Column="2" Margin="5">
                                <Label FontWeight="Bold">6. Feature extraction</Label>
                                <Button Margin="5" x:Name="FeatureStep6" IsEnabled="False" Click="btnFeatureFind_Click">Find feature</Button>
                                --><!--<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Height="370">
                                    <TextBlock x:Name="txtFeatureProtocol" 
                                           Text="{Binding Path=(link:Protocol.FullNewProtocol), Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}" FontFamily="Courier New" />
                                </ScrollViewer>--><!--
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>-->
            </TabControl>
        </DockPanel>
    </Grid>
</Window>
